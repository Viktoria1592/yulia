//Миксин для треугольников, сделанных через :before и :after
//Пример:
//div::after {
//  @include triangle(black, top, 10px);
//}
@mixin triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
  width: 0;
  height: 0;

  @include pseudo($pos: $position);
  @if $round {
    border-radius: 3px;
  }
  @if $direction==down {
    margin-top: 0 - round($size / 2.5);

    border-top: $size solid $color;
    border-right: $size solid transparent;
    border-left: $size solid transparent;
  }
  @else if $direction==up {
    margin-bottom: 0 - round($size / 2.5);

    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
  }
  @else if $direction==right {
    margin-right: -$size;

    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }
  @else if $direction==left {
    margin-left: -$size;

    border-top: $size solid transparent;
    border-right: $size solid $color;
    border-bottom: $size solid transparent;
  }
}

@mixin wrapper {
  width: 320px;
  margin: 0 auto;
  @media (min-width: 700px) and (max-width: 1199px) {
    width: 620px;
  }
  @media (min-width:1200px) {
    width: 940px;
  }
}

//Миксин для базовых параметров псевдоэлементов.
//Пример использования:
//div::after {
//  @include pseudo;
//  top: 10px;
//  left: 10px;
//  width: 150px;
//}
@mixin pseudo($display: block, $pos: absolute, $content: "") {
  position: $pos;

  display: $display;

  content: $content;
}

//Миксин для медиа-запросов
//Пример использования:
//div {
//  @include screen('phone') {
//    // Правила для разрешений выше 'phone'
//  }
//  @include screen('phone', max) {
//    // Правила для разрешений ниже 'phone'
//  }
//}
$breakpoints: ( "phone": 320px, "phone-wide": 480px, "phablet": 560px, "tablet-small": 640px, "tablet": 700px, "tablet-wide": 1024px, "desktop": 1200px, "desktop-wide": 1440px);
@mixin screen($width, $type: min) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type==max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

//Миксин для быстрого добавления clearfix.
//Пример использования:
//.parent {
//  @include clearfix;
//}
@mixin clearfix {
  &::after {
    display: table;
    clear: both;

    content: "";
  }
}

//Миксин для того, чтоб скрыть элемент, но при этом он все равно рендерился
//и был доступен в DOM.
//Пример использования:
//div {
//  @include visual-hide;
//}
@mixin visual-hide() {
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);

  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
}

//Миксин для быстрого выравнивания блока по центру
//Пример использования:
//div {
//  @include center-block;
//}
@mixin center-block {
  position: absolute;
  top: 50%;
  left: 50%;

  transform: translate(-50%, -50%);
}
